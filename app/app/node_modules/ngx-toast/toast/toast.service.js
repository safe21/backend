"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var ngx_toastr_1 = require("ngx-toastr");
var ToastService = (function () {
    function ToastService(toastrService) {
        this.toastrService = toastrService;
        this.toastrConfig = {};
        this.position = {
            top_right: 'toast-top-right',
            bottom_right: 'toast-bottom-right',
            top_left: 'toast-top-left',
            bottom_left: 'toast-bottom-left',
            top_full: 'toast-top-full',
            bottom_full: 'toast-bottom-full',
            top_center: 'toast-top-center',
            bottom_center: 'toast-bottom-center'
        };
    }
    ToastService.prototype.showInfoToast = function (params) {
        var timeOut = params.timeout ? params.timeout : 1000;
        var position = params.position;
        this.toastrConfig = {
            timeOut: timeOut,
            positionClass: position
        };
        this.toastrService.info(params.msg, params.title, this.toastrConfig);
    };
    ToastService.prototype.showSuccessToast = function (params) {
        var timeOut = params.timeout ? params.timeout : 1000;
        var position = params.position;
        this.toastrConfig = {
            timeOut: timeOut,
            positionClass: position
        };
        this.toastrService.success(params.msg, params.title, this.toastrConfig);
    };
    ToastService.prototype.showWarningToast = function (params) {
        var timeOut = params.timeout ? params.timeout : 1000;
        var position = params.position;
        this.toastrConfig = {
            timeOut: timeOut,
            positionClass: position
        };
        this.toastrService.warning(params.msg, params.title, this.toastrConfig);
    };
    ToastService.prototype.showErrorToast = function (params) {
        var timeOut = params.timeout ? params.timeout : 1000;
        var position = params.position;
        this.toastrConfig = {
            timeOut: timeOut,
            positionClass: position
        };
        this.toastrService.error(params.msg, params.title, this.toastrConfig);
    };
    ToastService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [ngx_toastr_1.ToastrService])
    ], ToastService);
    return ToastService;
}());
exports.ToastService = ToastService;
//# sourceMappingURL=toast.service.js.map